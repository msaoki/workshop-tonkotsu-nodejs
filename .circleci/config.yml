# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
      - image: circleci/node:7.10

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}

      # run tests!
      - run: npm run test
      
  deploy-staging:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Feature to Heroku staging
          command: |
            git push https://heroku:fb23d126-c8f1-437a-bd06-6260ba132024@git.heroku.com/msaoki-staging.git master
            
  deploy-production:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy master to Heroku production
          command: |
            git push https://heroku:fb23d126-c8f1-437a-bd06-6260ba132024@git.heroku.com/msaoki-production.git master
      - run:
          name: Create GitHub Deployment
          command: |
            curl -X POST -H "Authorization:token a464c7dbb1935ddc05f695b62b51e75978371892" -H "Accept:application/vnd.github.ant-man-preview+json" -i https://api.github.com/repos/msaoki/workshop-tonkotsu-nodejs/deployments
          
workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy-staging:
          requires:
            - build
          filters:
            branches:
              ignore: master
      - deploy-production:
          requires:
            - build
          filters:
            branches:
              only: master
